// <auto-generated />
using System;
using CheckWallet.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CheckWallet.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CheckWallet.API.V1.Models.AccountWatcher", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChainId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChainName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateTs")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastUpdateTs")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("WatchSettingsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("WatcherSettingsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("WatcherSettingsId");

                    b.ToTable("AccountWatchers");
                });

            modelBuilder.Entity("CheckWallet.API.V1.Models.WatcherSettings", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("ChainId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChainName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CheckIntervalMsecs")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateTs")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Default")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdateTs")
                        .HasColumnType("datetime2");

                    b.Property<string>("RpcUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("WeiBalanceThreshold")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("WatcherSettings");
                });

            modelBuilder.Entity("CheckWallet.API.V1.Models.AccountWatcher", b =>
                {
                    b.HasOne("CheckWallet.API.V1.Models.WatcherSettings", "WatcherSettings")
                        .WithMany()
                        .HasForeignKey("WatcherSettingsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WatcherSettings");
                });
#pragma warning restore 612, 618
        }
    }
}
